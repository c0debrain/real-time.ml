{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/tweet-embed/tweet-embed.component.html","webpack:///./src/app/tweets-line-chart-biden/tweets-line-chart-biden.component.html","webpack:///./src/app/tweets-line-chart-trump/tweets-line-chart-trump.component.html","webpack:///./src/app/tweets-line-chart/tweets-line-chart.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/market-status.service.ts","webpack:///./src/app/tweet-counts.service.ts","webpack:///./src/app/tweet-embed/tweet-embed.component.scss","webpack:///./src/app/tweet-embed/tweet-embed.component.ts","webpack:///./src/app/tweet-text.service.ts","webpack:///./src/app/tweet-text.ts","webpack:///./src/app/tweets-line-chart-biden/data.ts","webpack:///./src/app/tweets-line-chart-biden/tweets-line-chart-biden.component.scss","webpack:///./src/app/tweets-line-chart-biden/tweets-line-chart-biden.component.ts","webpack:///./src/app/tweets-line-chart-trump/data.ts","webpack:///./src/app/tweets-line-chart-trump/tweets-line-chart-trump.component.scss","webpack:///./src/app/tweets-line-chart-trump/tweets-line-chart-trump.component.ts","webpack:///./src/app/tweets-line-chart/data.ts","webpack:///./src/app/tweets-line-chart/tweets-line-chart.component.scss","webpack:///./src/app/tweets-line-chart/tweets-line-chart.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n    <div class=\\\"row jumbotron justify-content-between\\\">\\n        <div class=\\\"col-12\\\">\\n            <h2>Election in Realtime</h2>\\n            <p>Realtime visualization of social media about the United States 2020 Presidential Election</p> \\n        </div>\\n        <div class=\\\"col-auto\\\">\\n            <iframe src=\\\"https://ghbtns.com/github-btn.html?user=cpgeier&repo=real-time.ml&type=star&count=true&size=large\\\" frameborder=\\\"0\\\" scrolling=\\\"0\\\" width=\\\"160px\\\" height=\\\"30px\\\"></iframe>\\n        </div>\\n    </div>\\n    <div class=\\\"row mt-3\\\">\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row justify-content-center\\\">\\n                <h5>Election Tweets Per Minute</h5>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div style=\\\"height: 400px;\\\">\\n                        <app-tweets-line-chart [marketStatus]=\\\"marketStatusToPlot\\\"></app-tweets-line-chart>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row justify-content-center mt-5\\\">\\n                <h5>Tweets containing \\\"Joe Biden\\\"</h5>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div style=\\\"height: 400px;\\\">\\n                        <app-tweets-line-chart-biden [tweetCounts]=\\\"bidenTweetCountToPlot\\\"></app-tweets-line-chart-biden>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row justify-content-center mt-5\\\">\\n                <h5>Tweets containing \\\"Donald Trump\\\"</h5>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col\\\">\\n                    <div style=\\\"height: 400px;\\\">\\n                        <app-tweets-line-chart-trump [tweetCounts]=\\\"trumpTweetCountToPlot\\\"></app-tweets-line-chart-trump>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col\\\">\\n            <div class=\\\"row justify-content-center\\\">\\n                <h5>Live Tweets (and retweets)</h5>\\n            </div>\\n            <div class=\\\"row justify-content-center\\\">\\n                <div class=\\\"col-auto\\\">\\n                    <div style=\\\"height: 1300px; overflow: hidden;\\\">\\n                        <app-tweet-embed [tweetStatus]=\\\"tweetToShow\\\" [tweetId]=\\\"tweetId\\\"></app-tweet-embed>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <nav class=\\\"navbar navbar-light bg-light mt-4\\\">\\n        <div class=\\\"col-xs-3 ml-auto m-2\\\">\\n            <a class=\\\"ml-3\\\" href=\\\"https://github.com/cpgeier\\\"> \\n                <fa-icon class=\\\"fa-link\\\" [icon]=\\\"faGithub\\\" size=\\\"2x\\\"></fa-icon>\\n            </a>\\n            <a class=\\\"ml-3\\\" href=\\\"https://www.linkedin.com/in/chris-geier\\\"> \\n                <fa-icon class=\\\"fa-link\\\" [icon]=\\\"faLinkedinIn\\\" size=\\\"2x\\\"></fa-icon>\\n            </a>\\n            <a class=\\\"ml-3\\\" href=\\\"http://cpgeier.ml/\\\"> \\n                <fa-icon class=\\\"fa-link\\\" [icon]=\\\"faLink\\\" size=\\\"2x\\\"></fa-icon>\\n            </a>\\n        </div>\\n    </nav>\\n</div>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"<div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"col-auto mt-2\\\">\\n        <h6>\\n            <fa-icon *ngIf=\\\"!pause\\\" [icon]=\\\"faPause\\\" size=\\\"2x\\\" (click)=\\\"pause=!pause\\\" style=\\\"cursor: pointer\\\"></fa-icon>\\n            <fa-icon *ngIf=\\\"pause\\\" [icon]=\\\"faPlay\\\" size=\\\"2x\\\" (click)=\\\"pause=!pause\\\" style=\\\"cursor: pointer\\\"></fa-icon>\\n        </h6>\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n        <div *ngFor=\\\"let item of test_tweets.slice().reverse()\\\">\\n            <div id=\\\"{{ item }}\\\"></div>   \\n        </div>\\n    </div>\\n</div>\\n\"","module.exports = \"<div class=\\\"h-100\\\">\\n    <ngx-charts-line-chart\\n    [animations]=\\\"animations\\\"\\n    [scheme]=\\\"colorScheme\\\"\\n    [results]=\\\"multi\\\"\\n    [gradient]=\\\"gradient\\\"\\n    [xAxis]=\\\"showXAxis\\\"\\n    [yAxis]=\\\"showYAxis\\\"\\n    [legend]=\\\"showLegend\\\"\\n    [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n    [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n    [xAxisLabel]=\\\"xAxisLabel\\\"\\n    [yAxisLabel]=\\\"yAxisLabel\\\"\\n    [autoScale]=\\\"autoScale\\\"\\n    (select)=\\\"onSelect($event)\\\">\\n    </ngx-charts-line-chart>\\n</div>\"","module.exports = \"<div class=\\\"h-100\\\">\\n    <ngx-charts-line-chart\\n    [animations]=\\\"animations\\\"\\n    [scheme]=\\\"colorScheme\\\"\\n    [results]=\\\"multi\\\"\\n    [gradient]=\\\"gradient\\\"\\n    [xAxis]=\\\"showXAxis\\\"\\n    [yAxis]=\\\"showYAxis\\\"\\n    [legend]=\\\"showLegend\\\"\\n    [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n    [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n    [xAxisLabel]=\\\"xAxisLabel\\\"\\n    [yAxisLabel]=\\\"yAxisLabel\\\"\\n    [autoScale]=\\\"autoScale\\\"\\n    (select)=\\\"onSelect($event)\\\">\\n    </ngx-charts-line-chart>\\n</div>\"","module.exports = \"<div class=\\\"h-100\\\">\\n    <ngx-charts-line-chart\\n    [animations]=\\\"animations\\\"\\n    [scheme]=\\\"colorScheme\\\"\\n    [results]=\\\"multi\\\"\\n    [gradient]=\\\"gradient\\\"\\n    [xAxis]=\\\"showXAxis\\\"\\n    [yAxis]=\\\"showYAxis\\\"\\n    [legend]=\\\"showLegend\\\"\\n    [showXAxisLabel]=\\\"showXAxisLabel\\\"\\n    [showYAxisLabel]=\\\"showYAxisLabel\\\"\\n    [xAxisLabel]=\\\"xAxisLabel\\\"\\n    [yAxisLabel]=\\\"yAxisLabel\\\"\\n    [autoScale]=\\\"autoScale\\\"\\n    (select)=\\\"onSelect($event)\\\">\\n    </ngx-charts-line-chart>\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"a .fa-link {\\n  color: #777;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2NocmlzL0RvY3VtZW50cy9yZWFsLXRpbWUtdHdlZXRzL3NpdGUvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImEgLmZhLWxpbmsge1xuICAgIGNvbG9yOiAjNzc3O1xufSIsImEgLmZhLWxpbmsge1xuICBjb2xvcjogIzc3Nztcbn0iXX0= */\"","import { Component } from '@angular/core';\nimport { MarketStatusService } from './market-status.service';\nimport { TweetCountsService } from './tweet-counts.service';\nimport { TweetTextService } from './tweet-text.service';\nimport { Observable } from 'rxjs';\nimport { TweetText } from './tweet-text';\nimport { TweetCount } from './tweet-count'\nimport { faLinkedinIn } from '@fortawesome/free-brands-svg-icons';\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { faLink } from '@fortawesome/free-solid-svg-icons';\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n  faLinkedinIn = faLinkedinIn;\n  faGithub = faGithub;\n  faLink = faLink;\n  faPause = faPause;\n  marketStatus: TweetCount[];\n  marketStatusToPlot: TweetCount[];\n  \n  bidenTweetCount: TweetCount[];\n  bidenTweetCountToPlot: TweetCount[];\n  \n  trumpTweetCount: TweetCount[];\n  trumpTweetCountToPlot: TweetCount[];\n\n  tweetStatus: TweetText;\n  tweetToShow: string;\n  tweetId: string;\n\n  \n  set MarketStatus(status: TweetCount[]) {\n    this.marketStatus = status;\n    this.marketStatusToPlot = this.marketStatus.slice(0, 20);\n  }\n\n  set BidenTweetCount(tweetCount: TweetCount[]) {\n    this.bidenTweetCount = tweetCount;\n    this.bidenTweetCountToPlot = this.bidenTweetCount.slice(0, 20);\n  }\n  \n  set TrumpTweetCount(tweetCount: TweetCount[]) {\n    this.trumpTweetCount = tweetCount;\n    this.trumpTweetCountToPlot = this.trumpTweetCount.slice(0, 20);\n  }\n\n  set TweetStatus(status: TweetText) {\n    this.tweetStatus = status;\n    this.tweetId = this.tweetStatus.id_str;\n    this.tweetToShow = \"https://twitter.com/\" + this.tweetStatus.user_screen_name + \"/status/\" + this.tweetStatus.id_str;\n  }\n  constructor(private marketStatusSvc: MarketStatusService, private tweetsCountsSvc: TweetCountsService, private tweetTextSvc: TweetTextService) {\n    this.marketStatusSvc.getInitialMarketStatus()\n      .subscribe(prices => {\n        this.MarketStatus = prices;\n        let marketUpdateObservable =  this.marketStatusSvc.getUpdates();\n        marketUpdateObservable.subscribe((latestStatus: TweetCount) => { \n          this.MarketStatus = [latestStatus].concat(this.marketStatus); \n        }); \n      });\n\n    this.tweetsCountsSvc.getInitialTweetCountBiden()\n      .subscribe(tweet_count => {\n        this.BidenTweetCount = tweet_count;\n\n        let tweetUpdatesObservable =  this.tweetsCountsSvc.getBidenUpdates(); \n        tweetUpdatesObservable.subscribe((latestCount: TweetCount) => {  \n          this.BidenTweetCount = [latestCount].concat(this.bidenTweetCount); \n        }); \n      });\n\n    this.tweetsCountsSvc.getInitialTweetCountTrump()\n      .subscribe(tweet_count => {\n        this.TrumpTweetCount = tweet_count;\n        let tweetUpdatesObservable =  this.tweetsCountsSvc.getTrumpUpdates(); \n        tweetUpdatesObservable.subscribe((latestCount: TweetCount) => {  \n          this.TrumpTweetCount = [latestCount].concat(this.trumpTweetCount); \n        }); \n      });\n    this.tweetTextSvc.getInitialTweetTextStatus()\n      .subscribe((tweets) => {\n        this.TweetStatus = new TweetText(tweets);\n        let tweetStatusObservable =  this.tweetTextSvc.getUpdates();\n        tweetStatusObservable.subscribe((latestStatus: TweetText) => {\n          this.TweetStatus = latestStatus;\n        });\n      });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TweetEmbedComponent } from './tweet-embed/tweet-embed.component';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { TweetsLineChartComponent } from './tweets-line-chart/tweets-line-chart.component';\nimport { TweetsLineChartBidenComponent } from './tweets-line-chart-biden/tweets-line-chart-biden.component';\nimport { TweetsLineChartTrumpComponent } from './tweets-line-chart-trump/tweets-line-chart-trump.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    TweetEmbedComponent,\n    TweetsLineChartComponent,\n    TweetsLineChartBidenComponent,\n    TweetsLineChartTrumpComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FontAwesomeModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    NgxChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment'\nimport { TweetCount } from './tweet-count';\nimport { Subject, from } from  'rxjs';\nimport * as socketio from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarketStatusService {\n\n  private baseUrl =  environment.api_base_url;\n  constructor(private httpClient: HttpClient) { }\n\n  getInitialMarketStatus() {\n    return this.httpClient.get<TweetCount[]>(`${this.baseUrl}/api/v1/tweet_counts_all`);\n  }\n\n  getUpdates() {\n    let socket = socketio(this.baseUrl);\n    let marketSub = new Subject<TweetCount>();\n    let marketSubObservable = from(marketSub);\n\n    socket.on('tweet_counts_all', (marketStatus: TweetCount) => {\n      marketSub.next(marketStatus);\n    });\n\n    return marketSubObservable;\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment'\nimport { TweetCount } from './tweet-count';\nimport { Subject, from } from  'rxjs';\nimport * as socketio from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class TweetCountsService {\n\n  private baseUrl =  environment.api_base_url;\n  constructor(private httpClient: HttpClient) { }\n\n  getInitialTweetCountBiden() {\n    return this.httpClient.get<TweetCount[]>(`${this.baseUrl}/api/v1/tweet_counts_biden`);\n  }\n  \n  getInitialTweetCountTrump() {\n    return this.httpClient.get<TweetCount[]>(`${this.baseUrl}/api/v1/tweet_counts_trump`);\n  }\n\n  getTrumpUpdates() {\n    let socket = socketio(this.baseUrl);\n    let trumpSub = new Subject<TweetCount>();\n    let trumpSubObservable = from(trumpSub);\n\n    socket.on('tweet_counts_trump', (trumpStatus: TweetCount) => {\n      trumpSub.next(trumpStatus);\n    });\n\n    return trumpSubObservable;\n  }\n\n  getBidenUpdates() {\n    let socket = socketio(this.baseUrl);\n    let marketSub = new Subject<TweetCount>();\n    let marketSubObservable = from(marketSub);\n\n    socket.on('tweet_counts_biden', (marketStatus: TweetCount) => {\n      marketSub.next(marketStatus);\n    });\n\n    return marketSubObservable;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R3ZWV0LWVtYmVkL3R3ZWV0LWVtYmVkLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, Input, OnChanges, SimpleChanges} from '@angular/core';\nimport { TweetText } from '../tweet-text';\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\n@Component({\n  selector: 'app-tweet-embed',\n  templateUrl: './tweet-embed.component.html',\n  styleUrls: ['./tweet-embed.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class TweetEmbedComponent {\n  @Input()\n  tweetStatus: string;\n  @Input()\n  tweetId:string;\n  first = 1;\n  second = 2;\n  third = 3;\n  test_tweets: string[];\n  curr_twt: number;\n  faPause = faPause;\n  faPlay = faPlay;\n  pause: boolean;\n  ngOnInit() {\n    this.pause = false;\n    this.curr_twt = 0;\n    this.test_tweets = [];\n    for (let i = 0; i < 1; i++){\n       this.test_tweets.push(\"twt-\" + i);\n    }  \n  }\n\n  ngOnChanges() {\n    if (this.tweetId && !this.pause){\n      if (this.test_tweets.length > 10) {\n        this.test_tweets.shift();\n      }\n      this.test_tweets.push(\"twt-\" + (1 + this.curr_twt));\n      // @ts-ignore\n      twttr.widgets.createTweet(\n        this.tweetId,\n        document.getElementById(\"twt-\" + this.curr_twt),{\n          cards: \"hidden\",\n          conversation: \"none\"\n        }\n      );\n      this.curr_twt += 1;\n    }\n  }\n  ngAfterViewInit() {\n    // @ts-ignore\n    twttr.widgets.load();\n  }\n}","import {Injectable} from '@angular/core';\nimport {HttpClient,HttpErrorResponse,HttpHeaders} from '@angular/common/http';\nimport {environment} from '../environments/environment';\nimport {TweetText} from './tweet-text';\nimport { Subject, from, throwError, Observable } from  'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as socketio from 'socket.io-client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TweetTextService {\n\n  private baseUrl =  environment.api_base_url;\n  constructor(private http: HttpClient) { }\n\n  getInitialTweetTextStatus(): Observable<TweetText> {\n    return this.http.get<TweetText>(`${this.baseUrl}/api/v1/tweet_text_all`);\n  }\n\n  getUpdates() {\n    let socket = socketio(this.baseUrl);\n    let tweettextSub = new Subject<TweetText>();\n    let tweettextSubObservable = from(tweettextSub);\n    socket.on('tweet_text_all', (fullTweet) => {\n      let tweettextStatus = new TweetText(fullTweet);\n      tweettextSub.next(tweettextStatus);\n    });\n\n    return tweettextSubObservable;\n  }\n}","export class TweetText {\n    text: string;\n    id_str: string;\n    user_screen_name: string;\n\n    constructor(fullTweet: object) {\n        let tweet = fullTweet['_source']\n        this.text = tweet['text'];\n        this.id_str = tweet['id_str'];\n        this.user_screen_name = tweet['user']['screen_name'];\n        if (tweet['extended_tweet']) {\n            this.text = tweet['extended_tweet']['full_text'];\n        }\n        if (tweet['retweeted_status']) {\n            this.text = tweet['retweeted_status']['text'];\n            if (tweet['retweeted_status']['extended_tweet']) {\n                this.text = tweet['retweeted_status']['extended_tweet']['full_text']\n            }\n        }\n    }\n}","\nexport var multi = [\n    {\n        \"name\": \"Biden election Tweets\",\n        \"series\": [ ]\n    }\n];\n  ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R3ZWV0cy1saW5lLWNoYXJ0LWJpZGVuL3R3ZWV0cy1saW5lLWNoYXJ0LWJpZGVuLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, OnInit, Input } from '@angular/core';\nimport { multi } from './data';\nimport { TweetCount } from '../tweet-count';\n\n@Component({\n  selector: 'app-tweets-line-chart-biden',\n  templateUrl: './tweets-line-chart-biden.component.html',\n  styleUrls: ['./tweets-line-chart-biden.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TweetsLineChartBidenComponent {\n  @Input()\n  tweetCounts: TweetCount[];\n\n  single: any[];\n  multi: any[];\n\n  ngOnChanges() {\n    if (this.tweetCounts) { // Variable undefined on first ngOnChanges call\n      this.updateChart();\n    }\n  }\n  \n  updateChart() {\n    let now = new Date(this.tweetCounts[0].date);\n    this.multi[0].series.push({\n      \"name\": now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds(),\n      \"value\": this.tweetCounts[0].num_tweets\n    });\n    if (multi[0].series.length > 50) {\n      multi[0].series.shift();\n    }\n    this.multi = [...this.multi]\n  }\n  // options\n  animations = false;\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = true;\n  xAxisLabel = 'Time';\n  showYAxisLabel = true;\n  yAxisLabel = 'Tweets per minute';\n\n  colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n\n  // line, area\n  autoScale = true;\n  \n  constructor() {\n    Object.assign(this, { multi })   \n  }\n  \n  onSelect(event) {\n    //console.log(event);\n  }\n  \n}\n","\nexport var multi = [\n    {\n        \"name\": \"Trump election Tweets\",\n        \"series\": [ ]\n    }\n];\n  ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R3ZWV0cy1saW5lLWNoYXJ0LXRydW1wL3R3ZWV0cy1saW5lLWNoYXJ0LXRydW1wLmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, OnInit, Input } from '@angular/core';\nimport { multi } from './data';\nimport { TweetCount } from '../tweet-count';\n\n@Component({\n  selector: 'app-tweets-line-chart-trump',\n  templateUrl: './tweets-line-chart-trump.component.html',\n  styleUrls: ['./tweets-line-chart-trump.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TweetsLineChartTrumpComponent {\n  @Input()\n  tweetCounts: TweetCount[];\n\n  single: any[];\n  multi: any[];\n\n  ngOnChanges() {\n    if (this.tweetCounts) { // Variable undefined on first ngOnChanges call\n      this.updateChart();\n    }\n  }\n  \n  updateChart() {\n    let now = new Date(this.tweetCounts[0].date);\n    this.multi[0].series.push({\n      \"name\": now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds(),\n      \"value\": this.tweetCounts[0].num_tweets\n    });\n    if (multi[0].series.length > 50) {\n      multi[0].series.shift();\n    }\n    this.multi = [...this.multi]\n  }\n  // options\n  animations = false;\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = true;\n  xAxisLabel = 'Time';\n  showYAxisLabel = true;\n  yAxisLabel = 'Tweets per minute';\n\n  colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n\n  // line, area\n  autoScale = true;\n  \n  constructor() {\n    Object.assign(this, { multi })   \n  }\n  \n  onSelect(event) {\n    //console.log(event);\n  }\n  \n}\n","\nexport var multi = [\n{\n    \"name\": \"Election Tweets\",\n    \"series\": [ ]\n}\n];\n  ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3R3ZWV0cy1saW5lLWNoYXJ0L3R3ZWV0cy1saW5lLWNoYXJ0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { ChangeDetectionStrategy, Component, OnInit, Input } from '@angular/core';\nimport { multi} from './data';\nimport { TweetCount } from '../tweet-count';\n\n@Component({\n  selector: 'app-tweets-line-chart',\n  templateUrl: './tweets-line-chart.component.html',\n  styleUrls: ['./tweets-line-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TweetsLineChartComponent {\n  @Input()\n  marketStatus: TweetCount[];\n\n  single: any[];\n  multi: any[];\n\n  ngOnChanges() {\n    if (this.marketStatus) { // Variable undefined on first ngOnChanges call\n      this.updateChart();\n    }\n  }\n  \n  updateChart() {\n    let now = new Date(this.marketStatus[0].date);\n    console.log(now.toISOString());\n    this.multi[0].series.push({\n      \"name\": now.getHours() + \":\" + now.getMinutes() + \":\" + now.getSeconds(),\n      \"value\": this.marketStatus[0].num_tweets\n    });\n    if (multi[0].series.length > 50) {\n      multi[0].series.shift();\n    }\n    this.multi = [...this.multi]\n  }\n  // options\n  animations = false;\n  showXAxis = true;\n  showYAxis = true;\n  gradient = false;\n  showLegend = false;\n  showXAxisLabel = true;\n  xAxisLabel = 'Time';\n  showYAxisLabel = true;\n  yAxisLabel = 'Tweets per minute';\n\n  colorScheme = {\n    domain: ['#5AA454', '#A10A28', '#C7B42C', '#AAAAAA']\n  };\n\n  // line, area\n  autoScale = true;\n  \n  constructor() {\n    Object.assign(this, { multi})   \n  }\n  \n  onSelect(event) {\n    //console.log(event);\n  }\n  \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  api_base_url: \"http://35.244.141.174\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}